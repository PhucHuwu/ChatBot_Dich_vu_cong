#!/bin/bash

# Script cleanup Docker ƒë·ªÉ ti·∫øt ki·ªám dung l∆∞·ª£ng
# S·ª≠ d·ª•ng: ./cleanup_docker.sh [--aggressive]

set -e

echo "==================================="
echo "Docker Cleanup Script"
echo "==================================="
echo ""

# Ki·ªÉm tra dung l∆∞·ª£ng tr∆∞·ªõc cleanup
echo "üìä Disk usage TR∆Ø·ªöC cleanup:"
echo "-----------------------------------"
df -h / | grep -E 'Filesystem|/dev'
echo ""
docker system df
echo ""

# H·ªèi x√°c nh·∫≠n
read -p "‚ö†Ô∏è  B·∫°n c√≥ mu·ªën ti·∫øp t·ª•c cleanup? (y/N): " -n 1 -r
echo
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo "‚ùå ƒê√£ h·ªßy."
    exit 1
fi

echo ""
echo "üßπ B·∫Øt ƒë·∫ßu cleanup..."
echo ""

# Stop containers (kh√¥ng x√≥a)
echo "1Ô∏è‚É£  Stopping containers..."
docker-compose down 2>/dev/null || true

# Cleanup t·ª´ng b∆∞·ªõc
echo "2Ô∏è‚É£  Removing stopped containers..."
docker container prune -f

echo "3Ô∏è‚É£  Removing dangling images..."
docker image prune -f

echo "4Ô∏è‚É£  Removing unused networks..."
docker network prune -f

# N·∫øu --aggressive ƒë∆∞·ª£c ch·ªâ ƒë·ªãnh
if [[ "$1" == "--aggressive" ]]; then
    echo ""
    echo "‚ö° AGGRESSIVE MODE"
    read -p "‚ö†Ô∏è  X√≥a T·∫§T C·∫¢ images kh√¥ng d√πng? (y/N): " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        echo "5Ô∏è‚É£  Removing ALL unused images..."
        docker image prune -a -f
        
        echo "6Ô∏è‚É£  Removing unused volumes..."
        docker volume prune -f
        
        echo "7Ô∏è‚É£  Removing build cache..."
        docker builder prune -a -f
    fi
fi

echo ""
echo "‚úÖ Cleanup ho√†n t·∫•t!"
echo ""

# Ki·ªÉm tra dung l∆∞·ª£ng sau cleanup
echo "üìä Disk usage SAU cleanup:"
echo "-----------------------------------"
df -h / | grep -E 'Filesystem|/dev'
echo ""
docker system df
echo ""

# T√≠nh dung l∆∞·ª£ng ƒë√£ gi·∫£i ph√≥ng (rough estimate)
echo "üí° TIP: ƒê·ªÉ cleanup to√†n b·ªô (c·∫©n th·∫≠n!):"
echo "   docker system prune -a -f --volumes"
echo ""
echo "üí° Kh·ªüi ƒë·ªông l·∫°i container:"
echo "   docker-compose up -d"
echo ""
